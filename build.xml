<project name="secxbrl" default="dist" basedir=".">

  <!-- Path to the directory of ivy library -->
  <path id="ivy.lib.path">
      <fileset dir="ivy" includes="*.jar"/>
  </path>
  <taskdef name="ivy-configure" classname="org.apache.ivy.ant.IvyConfigure" classpathref="ivy.lib.path"/>
  <taskdef name="ivy-resolve" classname="org.apache.ivy.ant.IvyResolve" classpathref="ivy.lib.path"/>
  <taskdef name="ivy-retrieve" classname="org.apache.ivy.ant.IvyRetrieve" classpathref="ivy.lib.path"/>
  <taskdef name="ivy-publish" classname="org.apache.ivy.ant.IvyPublish" classpathref="ivy.lib.path"/> 
  <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>

  <!-- set global properties for this build -->
  <property name="main-class" value="cs.toronto.edu.secxbrl.Main"/>
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>
  <property name="lib" location="lib"/>
  <property name="jar.file" value="${dist}/${ant.project.name}.jar"/>
  <path id="lib.path">    
      <fileset dir="${lib}">
          <include name="**/*.jar"/>
      </fileset>
  </path>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
    <!-- <mkdir dir="${lib}" /> -->

    <!-- Resolve dependencies -->
    <ivy-retrieve pattern="${lib}/[artifact].[ext]" type="jar"/>
  </target>

  <target name="compile" depends="init"
        description="compile the source " >
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}" >
      <classpath refid="lib.path"/>
    </javac>
  </target>

  <target name="dist" depends="compile"
        description="generate the distribution" >
    <mkdir dir="${dist}"/>
    <mkdir dir="${build}/lib"/>
    <copy todir="${build}/lib" flatten="true">
      <path refid="lib.path" />
    </copy>

    <manifestclasspath property="manifest.classpath" jarfile="${jar.file}">
        <classpath refid="lib.path"/>
    </manifestclasspath>

    <jar destfile="${jar.file}" basedir="${build}">
        <manifest>
            <attribute name="Main-Class" value="${main-class}"/>
            <attribute name="Class-Path" value="${manifest.classpath}"/>
        </manifest>
    </jar>
  </target>

  <target name="clean"
        description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
</project>